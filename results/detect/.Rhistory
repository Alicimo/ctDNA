root.dir <- "~/OneDrive/projects/"
project.dir <- paste0(root.dir,"PDX/")
source(paste0(root.dir,"R.utils/RNASEQ.utils.R"))
source(paste0(project.dir,"src/load.PDX.R"))
library(iC10)
library(genefu)
ensembl.human = useEnsembl(biomart="ensembl", dataset="hsapiens_gene_ensembl", GRCh=37)
ensembl.mouse = useEnsembl(biomart="ensembl", dataset="mmusculus_gene_ensembl")
rnaseq <- get.PDX()
meta <- load.meta()
meta <- subset.meta(meta,meta[,project=="characterisation"])
rnaseq <- subset.PDX(rnaseq, rnaseq$meta[,Sample.name] %in% meta[,Sample.name])
rnaseq$meta[Sample.name=="AB793-T1-T" & Pool=="SLX-12501",Sample.name:=paste0(Sample.name,".R2")]
meta <- rbind(meta,meta[Sample.name=="AB793-T1-T"])
meta[nrow(meta),Sample.name:=paste0(Sample.name,".R2")]
rnaseq <- merge.PDX(rnaseq)
#rnaseq$meta[,merged.lanes:=as.numeric(as.factor(merged.lanes))]
rnaseq$meta <- merge(rnaseq$meta,meta,sort=F)
rnaseq <- subset.PDX(rnaseq, rnaseq$meta[,human.library.size > 1e6])
rnaseq <- subset.PDX(rnaseq, rnaseq$meta[,mouse.library.size/(human.library.size+mouse.library.size) < .8])
rnaseq <- subset.PDX(rnaseq, rnaseq$meta[,sample.type!="cell.line"])
pca.human <- pca.run(rnaseq$human$data)
ggpairs(cbind(pca.human,rnaseq$meta),columns = 1:3,mapping = aes(color=factor(merged.lanes)),title="Coloured by sequencing runs")
ggpairs(cbind(pca.human,rnaseq$meta),columns = 1:3,mapping = aes(color=factor(sample.type)),title="Coloured by sample type")
ggpairs(cbind(pca.human,rnaseq$meta),columns = 1:3,mapping = aes(color=cut(mouse.library.size/(human.library.size+mouse.library.size),quantile(mouse.library.size/(human.library.size+mouse.library.size)))),title="Coloured by mouse fraction")
x <- cbind(pca.human,rnaseq$meta)
x[sample.type=="xenograft" & PC1>-2 & PC2>5,.(Sample.name,merged.lanes,PC1)]
x[sample.type=="primary" & PC1< -2 & PC2>5,.(Sample.name,merged.lanes,PC1)]
(y <- x[merged.lanes %in% c("SLX-12501:HFV2VBBXX:s_5"),.(Sample.name,sample.type,primary.on.pca=PC1>-2,PC1)])
y[,.N,.(sample.type,primary.on.pca)]
(y <- x[merged.lanes %in% c("SLX-12507:HFV2VBBXX:s_6;SLX-12507:HFV2VBBXX:s_7"),.(Sample.name,sample.type,primary.on.pca=PC1>-2,PC1)])
y[,.N,.(sample.type,primary.on.pca)]
rnaseq <- subset.PDX(rnaseq, rnaseq$meta[,!(merged.lanes %in% c("SLX-12501:HFV2VBBXX:s_5","SLX-12507:HFV2VBBXX:s_6;SLX-12507:HFV2VBBXX:s_7"))])
rnaseq$meta[,merged.lanes:=as.numeric(as.factor(merged.lanes))]
pca.human <- pca.run(rnaseq$human$data)
ggpairs(cbind(pca.human,rnaseq$meta),columns = 1:3,mapping = aes(color=factor(merged.lanes)),title="Coloured by sequencing runs")
ggpairs(cbind(pca.human,rnaseq$meta),columns = 1:3,mapping = aes(color=factor(sample.type)),title="Coloured by sample type")
ggpairs(cbind(pca.human,rnaseq$meta),columns = 1:3,mapping = aes(color=cut(mouse.library.size/(human.library.size+mouse.library.size),quantile(mouse.library.size/(human.library.size+mouse.library.size)))),title="Coloured by mouse fraction")
rnaseq$mouse
rnaseq$huma
human
rnaseq$human
rnaseq$human$data
rnaseq <- get.PDX()
meta <- load.meta()
meta <- subset.meta(meta,meta[,project=="characterisation"])
rnaseq <- subset.PDX(rnaseq, rnaseq$meta[,Sample.name] %in% meta[,Sample.name])
rnaseq$meta[Sample.name=="AB793-T1-T" & Pool=="SLX-12501",Sample.name:=paste0(Sample.name,".R2")]
meta <- rbind(meta,meta[Sample.name=="AB793-T1-T"])
meta[nrow(meta),Sample.name:=paste0(Sample.name,".R2")]
rnaseq <- merge.PDX(rnaseq)
rnaseq$meta <- merge(rnaseq$meta,meta,sort=F)
rnaseq <- subset.PDX(rnaseq, rnaseq$meta[,human.library.size > 1e6])
rnaseq <- subset.PDX(rnaseq, rnaseq$meta[,mouse.library.size/(human.library.size+mouse.library.size) < .8])
rnaseq <- subset.PDX(rnaseq, rnaseq$meta[,sample.type!="cell.line"])
rnaseq <- subset.PDX(rnaseq, rnaseq$meta[,!(merged.lanes %in% c("SLX-12501:HFV2VBBXX:s_5","SLX-12507:HFV2VBBXX:s_6;SLX-12507:HFV2VBBXX:s_7"))])
rnaseq$meta[,merged.lanes:=as.numeric(as.factor(merged.lanes))]
scRNAseq.dir <- paste0(root.dir,"PDX.scRNAseq/results/human/PAR1006.combined/")
fnames <- grep("cluster.\\d.marker.genes.csv",list.files(scRNAseq.dir),value = T)
scRNAseq.genes <- lapply(fnames, function(fname){
x <- fread(paste0(scRNAseq.dir,fname))
x[,gene:=gsub("hg19-","",gene)]
x[,gene.entrez:=mapIds(org.Hs.eg.db,keys=gene,keytype="SYMBOL",column="ENTREZID",multiVals="first")]
y <- x[,grep("logFC",names(x)),with=F]>0
x$direction <- ifelse(apply(y,1,all),"UP",ifelse(apply(!y,1,all),"DOWN","MIXED"))
list(
"UP"=na.omit(x[direction=="UP",gene.entrez]),
"DOWN"=na.omit(x[direction=="DOWN",gene.entrez])
)
})
for(i in seq_along(scRNAseq.genes)) names(scRNAseq.genes[[i]]) <- paste0("cluster.",i-1,".",names(scRNAseq.genes[[i]]))
scRNAseq.genes <- unlist(scRNAseq.genes,recursive = F)
?gsva
rnaseq
rnaseq$human$data
rnaseq <- subset.PDX(rnaseq, rnaseq$meta[,sample.type=="xenograft"])
rnaseq$meta
norm.count.matrix <- function(y,zero.count.shift=0.5,lib.sizes){
y <- t(1E6 * t(y) / (lib.sizes * calcNormFactors(y,lib.sizes)))
y <- log(y+zero.count.shift)
return(y)
}
w <- norm.count.matrix(rnaseq$human$data,lib.sizes = colSums(rnaseq$human$data))
w
rownames(w) <- mapIds.ensembl(rownames(w),"human")
rownames(w)
w <- w[!is.na(rownames(w)),]
w <- gsva(w,scRNAseq.genes,min.sz=5,max.sz=500)
w
pheatmap(w)
pheatmap(w,cluster_rows = F)
rnaseq$meta$merged.lanes
w <-  removeBatchEffect(w,batch =  rnaseq$meta$merged.lanes)
w <- gsva(w,scRNAseq.genes,min.sz=5,max.sz=500)
w <- norm.count.matrix(rnaseq$human$data,lib.sizes = colSums(rnaseq$human$data))
w <-  removeBatchEffect(w,batch =  rnaseq$meta$merged.lanes)
rownames(w) <- mapIds.ensembl(rownames(w),"human")
w <- w[!is.na(rownames(w)),]
w <- gsva(w,scRNAseq.genes,min.sz=5,max.sz=500)
pheatmap(w,cluster_rows = F)
rnaseq$meta
rnaseq$meta[,.(merged.lanes)]
data.frame(rnaseq$meta[,.(merged.lanes)])
ann.col <- data.frame(rnaseq$meta[,.(merged.lanes)])
rownames(ann.col) <- rnaseq$meta$Sample.name
pheatmap(w,cluster_rows = F,annotation_col = ann.col)
pheatmap(w,cluster_rows = F,annotation_col = ann.col,cellwidth = 5,cellheight = 5)
pheatmap(w,cluster_rows = F,annotation_col = ann.col,cellwidth = 5,cellheight = 5,border_color = "grey80")
pheatmap(w,cluster_rows = F,annotation_col = ann.col,cellwidth = 5,cellheight = 5,border_color = "grey20")
pheatmap(w,cluster_rows = F,annotation_col = ann.col,border_color = "grey80")
pheatmap(w,cluster_rows = F,annotation_col = ann.col,border_color = "grey20",cellheight = 5)
pheatmap(w,cluster_rows = F,annotation_col = ann.col,border_color = "grey20",cellheight = 5)
pheatmap(w,cluster_rows = F,annotation_col = ann.col,border_color = "red",cellheight = 5)
pheatmap(w,cluster_rows = F,annotation_col = ann.col,border_color = "red",cellheight = 10)
pheatmap(w,cluster_rows = F,annotation_col = ann.col,cellheight = 5,border_color = "red")
pheatmap(w,cluster_rows = F,annotation_col = ann.col,cellheight = 5,)
pheatmap(w,cluster_rows = F,annotation_col = ann.col,cellheight = 5)
pheatmap(w,cluster_rows = F,annotation_col = ann.col,cellwidth = 5,cellheight = 5,border_color = "grey20")
p <- pheatmap(w,cluster_rows = F,annotation_col = ann.col,cellwidth = 5,cellheight = 5,border_color = "grey20")
png("~/Desktop/test.png")
p
dev.off()
png("~/Desktop/test.png",height=600,width=1000);p;dev.off()
p <- pheatmap(w,cluster_rows = F,annotation_col = ann.col,border_color = "grey20")
w <- norm.count.matrix(rnaseq$human$data,lib.sizes = colSums(rnaseq$human$data))
#w <-  removeBatchEffect(w,batch =  rnaseq$meta$merged.lanes)
rownames(w) <- mapIds.ensembl(rownames(w),"human")
w <- w[!is.na(rownames(w)),]
w <- gsva(w,scRNAseq.genes,min.sz=5,max.sz=500)
ann.col <- data.frame(rnaseq$meta[,.(merged.lanes)])
pheatmap(w,cluster_rows = F,annotation_col = ann.col,border_color = "grey20")
w
rownames(ann.col) <- rnaseq$meta$Sample.name
pheatmap(w,cluster_rows = F,annotation_col = ann.col,border_color = "grey20")
pheatmap(w,cluster_rows = F,annotation_col = ann.col,border_color = "grey20")
rnaseq <- get.PDX()
rnaseq <- get.PDX()
meta <- load.meta()
meta.par1006 <- subset.meta(meta,meta[,project=="PAR1006"])
rnaseq.par1006 <- subset.PDX(rnaseq, rnaseq$meta[,Sample.name] %in% meta.par1006[,Sample.name])
meta <- subset.meta(meta,meta[,project=="characterisation"])
rnaseq <- subset.PDX(rnaseq, rnaseq$meta[,Sample.name] %in% meta[,Sample.name])
rnaseq$meta[Sample.name=="AB793-T1-T" & Pool=="SLX-12501",Sample.name:=paste0(Sample.name,".R2")]
meta <- rbind(meta,meta[Sample.name=="AB793-T1-T"])
meta[nrow(meta),Sample.name:=paste0(Sample.name,".R2")]
rnaseq <- merge.PDX(rnaseq)
rnaseq$meta <- merge(rnaseq$meta,meta,sort=F)
rnaseq <- subset.PDX(rnaseq, rnaseq$meta[,human.library.size > 1e6])
rnaseq <- subset.PDX(rnaseq, rnaseq$meta[,mouse.library.size/(human.library.size+mouse.library.size) < .8])
rnaseq <- subset.PDX(rnaseq, rnaseq$meta[,sample.type=="xenograft"])
rnaseq <- subset.PDX(rnaseq, rnaseq$meta[,!(merged.lanes %in% c("SLX-12501:HFV2VBBXX:s_5","SLX-12507:HFV2VBBXX:s_6;SLX-12507:HFV2VBBXX:s_7"))])
root.dir <- "~/OneDrive/projects/"
project.dir <- paste0(root.dir,"PDX/")
source(paste0(root.dir,"R.utils/RNASEQ.utils.R"))
source(paste0(project.dir,"src/load.PDX.R"))
library(iC10)
library(genefu)
ensembl.human = useEnsembl(biomart="ensembl", dataset="hsapiens_gene_ensembl", GRCh=37)
ensembl.mouse = useEnsembl(biomart="ensembl", dataset="mmusculus_gene_ensembl")
rnaseq <- get.PDX()
meta <- load.meta()
meta <- subset.meta(meta,meta[,project=="characterisation"])
rnaseq <- subset.PDX(rnaseq, rnaseq$meta[,Sample.name] %in% meta[,Sample.name])
rnaseq$meta[Sample.name=="AB793-T1-T" & Pool=="SLX-12501",Sample.name:=paste0(Sample.name,".R2")]
meta <- rbind(meta,meta[Sample.name=="AB793-T1-T"])
meta[nrow(meta),Sample.name:=paste0(Sample.name,".R2")]
rnaseq <- merge.PDX(rnaseq)
#rnaseq$meta[,merged.lanes:=as.numeric(as.factor(merged.lanes))]
rnaseq$meta <- merge(rnaseq$meta,meta,sort=F)
rnaseq <- subset.PDX(rnaseq, rnaseq$meta[,human.library.size > 1e6])
rnaseq <- subset.PDX(rnaseq, rnaseq$meta[,mouse.library.size/(human.library.size+mouse.library.size) < .8])
rnaseq <- subset.PDX(rnaseq, rnaseq$meta[,sample.type!="cell.line"])
pca.human <- pca.run(rnaseq$human$data)
ggpairs(cbind(pca.human,rnaseq$meta),columns = 1:3,mapping = aes(color=factor(merged.lanes)),title="Coloured by sequencing runs")
ggpairs(cbind(pca.human,rnaseq$meta),columns = 1:3,mapping = aes(color=factor(sample.type)),title="Coloured by sample type")
ggpairs(cbind(pca.human,rnaseq$meta),columns = 1:3,mapping = aes(color=cut(mouse.library.size/(human.library.size+mouse.library.size),quantile(mouse.library.size/(human.library.size+mouse.library.size)))),title="Coloured by mouse fraction")
x <- cbind(pca.human,rnaseq$meta)
x[sample.type=="xenograft" & PC1>-2 & PC2>5,.(Sample.name,merged.lanes,PC1)]
x[sample.type=="primary" & PC1< -2 & PC2>5,.(Sample.name,merged.lanes,PC1)]
(y <- x[merged.lanes %in% c("SLX-12501:HFV2VBBXX:s_5"),.(Sample.name,sample.type,primary.on.pca=PC1>-2,PC1)])
y[,.N,.(sample.type,primary.on.pca)]
(y <- x[merged.lanes %in% c("SLX-12507:HFV2VBBXX:s_6;SLX-12507:HFV2VBBXX:s_7"),.(Sample.name,sample.type,primary.on.pca=PC1>-2,PC1)])
y[,.N,.(sample.type,primary.on.pca)]
rnaseq <- subset.PDX(rnaseq, rnaseq$meta[,!(merged.lanes %in% c("SLX-12501:HFV2VBBXX:s_5","SLX-12507:HFV2VBBXX:s_6;SLX-12507:HFV2VBBXX:s_7"))])
rnaseq$meta[,merged.lanes:=as.numeric(as.factor(merged.lanes))]
pca.human <- pca.run(rnaseq$human$data)
ggpairs(cbind(pca.human,rnaseq$meta),columns = 1:3,mapping = aes(color=factor(merged.lanes)),title="Coloured by sequencing runs")
ggpairs(cbind(pca.human,rnaseq$meta),columns = 1:3,mapping = aes(color=factor(sample.type)),title="Coloured by sample type")
ggpairs(cbind(pca.human,rnaseq$meta),columns = 1:3,mapping = aes(color=cut(mouse.library.size/(human.library.size+mouse.library.size),quantile(mouse.library.size/(human.library.size+mouse.library.size)))),title="Coloured by mouse fraction")
